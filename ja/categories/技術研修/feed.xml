<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>技術研修 on yexca'Blog</title><link>https://blog.yexca.net/ja/categories/%E6%8A%80%E8%A1%93%E7%A0%94%E4%BF%AE/</link><description>Recent content in 技術研修 on yexca'Blog</description><generator>Hugo -- gohugo.io</generator><language>ja</language><copyright>yexca</copyright><lastBuildDate>Wed, 05 Feb 2025 17:37:54 +0900</lastBuildDate><atom:link href="https://blog.yexca.net/ja/categories/%E6%8A%80%E8%A1%93%E7%A0%94%E4%BF%AE/feed.xml" rel="self" type="application/rss+xml"/><item><title>MyBatis 使い方</title><link>https://blog.yexca.net/ja/archives/216/</link><pubDate>Mon, 13 Jan 2025 21:06:03 +0900</pubDate><guid>https://blog.yexca.net/ja/archives/216/</guid><description>&lt;blockquote>
&lt;p>この記事の一部は機械翻訳を使ったよ&lt;/p>
&lt;p>&lt;strong>MyBatis シリーズ&lt;/strong>&lt;/p>
&lt;p>インストールと開始方法:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/215"
>
https://blog.yexca.net/ja/archives/215
&lt;/a>
&lt;br>
使い方: この記事&lt;/p>
&lt;/blockquote>
&lt;h2 id="削除">削除
&lt;/h2>&lt;p>パラメータ名を中に入れたプレースホルダとして &lt;code>#{}&lt;/code> を使用します&lt;/p></description></item><item><title>MyBatis のインストールと開始方法</title><link>https://blog.yexca.net/ja/archives/215/</link><pubDate>Sun, 12 Jan 2025 23:59:48 +0900</pubDate><guid>https://blog.yexca.net/ja/archives/215/</guid><description>&lt;blockquote>
&lt;p>この記事の一部は機械翻訳を使ったよ&lt;/p>
&lt;p>&lt;strong>MyBatis シリーズ&lt;/strong>&lt;/p>
&lt;p>インストールと開始方法: この記事&lt;br>
使い方:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/216"
>
https://blog.yexca.net/ja/archives/216
&lt;/a>
&lt;/p>
&lt;/blockquote>
&lt;p>MyBatis は JDBC 開発を簡素化する優れた永続層フレームワークです。&lt;/p></description></item><item><title>Pythonでpyinstallerを使って実行ファイル化する</title><link>https://blog.yexca.net/ja/archives/213/</link><pubDate>Tue, 07 Jan 2025 17:26:09 +0900</pubDate><guid>https://blog.yexca.net/ja/archives/213/</guid><description>&lt;div class="notice ">&lt;strong>📢&lt;/strong> この記事は ChatGPT によって翻訳されました
&lt;/div>
&lt;style lang="scss">
.notice {
padding: 0.75em 1em;
margin: 1em 0;
border-left: 4px solid;
border-radius: 4px;
&amp;.default {
border-color: #ccc;
background-color: #f9f9f9;
color: #333;
}
&amp;.info {
border-color: #2196f3;
background-color: #e3f2fd;
color: #1a237e;
}
&amp;.warn {
border-color: #ff9800;
background-color: #fff3e0;
color: #e65100;
}
&amp;.danger {
border-color: #f44336;
background-color: #ffebee;
color: #b71c1c;
}
}
[data-scheme="dark"] {
.notice {
&amp;.default {
border-color: #666;
background-color: #2a2a2a;
color: #eee;
}
&amp;.info {
border-color: #90caf9;
background-color: #1e3a5f;
color: #e3f2fd;
}
&amp;.warn {
border-color: #ffb74d;
background-color: #4e342e;
color: #fff3e0;
}
&amp;.danger {
border-color: #ef5350;
background-color: #3e2723;
color: #ffebee;
}
}
}
[data-scheme="sepia"] {
.notice {
&amp;.info {
border-color: #6a5acd;
background-color: #fdf6e3;
color: #3c2f2f;
}
&amp;.warn {
border-color: #e9967a;
background-color: #faf0e6;
color: #5c4033;
}
&amp;.danger {
border-color: #cd5c5c;
background-color: #f5e0dc;
color: #7b3f3f;
}
}
}
&lt;/style>
&lt;p>Python でのパッケージ化は今の OS 環境に依存する。&lt;br>
Windows なら &lt;code>.exe&lt;/code>、Linux なら ELF 形式になる。&lt;br>
クロスプラットフォームの出力は非対応。&lt;/p></description></item><item><title>GoLang バックエンドを使い始める</title><link>https://blog.yexca.net/ja/archives/208/</link><pubDate>Sun, 22 Dec 2024 22:07:15 +0800</pubDate><guid>https://blog.yexca.net/ja/archives/208/</guid><description>&lt;blockquote>
&lt;p>この記事の一部は機械翻訳を使ったよ&lt;/p>
&lt;/blockquote>
&lt;p>Go バックエンドのシンプルな (非技術的なフレームワーク) 実装&lt;/p>
&lt;p>~~皆さんご存知のとおり、~~バックエンド開発は一般的にインターフェース指向開発、つまり CRUD エンジニアです。この記事では、Go を使用して、データベースからデータを読み取り、JSON データを返す方法について説明します。&lt;/p></description></item><item><title>GoLang チャンネル</title><link>https://blog.yexca.net/ja/archives/207/</link><pubDate>Sat, 21 Dec 2024 14:52:55 +0800</pubDate><guid>https://blog.yexca.net/ja/archives/207/</guid><description>&lt;blockquote>
&lt;p>この記事の一部は機械翻訳を使ったよ&lt;/p>
&lt;p>&lt;strong>Golang シリーズ&lt;/strong>&lt;/p>
&lt;p>Hello GoLang:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/154"
>
https://blog.yexca.net/ja/archives/154
&lt;/a>
&lt;br>
GoLang (var and const) 変数と定数:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/155"
>
https://blog.yexca.net/ja/archives/155
&lt;/a>
&lt;br>
GoLang (func) 関数:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/156"
>
https://blog.yexca.net/ja/archives/156
&lt;/a>
&lt;br>
GoLang (slice and map) スライス:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/160"
>
https://blog.yexca.net/ja/archives/160
&lt;/a>
&lt;br>
GoLang (OOP) オブジェクト指向:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/162"
>
https://blog.yexca.net/ja/archives/162
&lt;/a>
&lt;br>
GoLang (reflect) リフレクション:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/204"
>
https://blog.yexca.net/ja/archives/204
&lt;/a>
&lt;br>
GoLang (struct tag) 構造タグ:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/205"
>
https://blog.yexca.net/ja/archives/205
&lt;/a>
&lt;br>
GoLang (goroutine) ゴルーチン:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/206"
>
https://blog.yexca.net/ja/archives/206
&lt;/a>
&lt;br>
GoLang (channel) チャンネル: この記事&lt;/p></description></item><item><title>GoLang ゴルーチン</title><link>https://blog.yexca.net/ja/archives/206/</link><pubDate>Tue, 17 Dec 2024 21:16:31 +0800</pubDate><guid>https://blog.yexca.net/ja/archives/206/</guid><description>&lt;blockquote>
&lt;p>この記事の一部は機械翻訳を使ったよ&lt;/p>
&lt;p>&lt;strong>Golang シリーズ&lt;/strong>&lt;/p>
&lt;p>Hello GoLang:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/154"
>
https://blog.yexca.net/ja/archives/154
&lt;/a>
&lt;br>
GoLang (var and const) 変数と定数:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/155"
>
https://blog.yexca.net/ja/archives/155
&lt;/a>
&lt;br>
GoLang (func) 関数:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/156"
>
https://blog.yexca.net/ja/archives/156
&lt;/a>
&lt;br>
GoLang (slice and map) スライス:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/160"
>
https://blog.yexca.net/ja/archives/160
&lt;/a>
&lt;br>
GoLang (OOP) オブジェクト指向:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/162"
>
https://blog.yexca.net/ja/archives/162
&lt;/a>
&lt;br>
GoLang (reflect) リフレクション:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/204"
>
https://blog.yexca.net/ja/archives/204
&lt;/a>
&lt;br>
GoLang (struct tag) 構造タグ:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/205"
>
https://blog.yexca.net/ja/archives/205
&lt;/a>
&lt;br>
GoLang (goroutine) ゴルーチン: この記事&lt;br>
GoLang (channel) チャンネル:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/207"
>
https://blog.yexca.net/ja/archives/207
&lt;/a>
&lt;/p></description></item><item><title>GoLang 構造タグ</title><link>https://blog.yexca.net/ja/archives/205/</link><pubDate>Wed, 11 Dec 2024 18:31:18 +0800</pubDate><guid>https://blog.yexca.net/ja/archives/205/</guid><description>&lt;blockquote>
&lt;p>この記事の一部は機械翻訳を使ったよ&lt;/p>
&lt;p>&lt;strong>Golang シリーズ&lt;/strong>&lt;/p>
&lt;p>Hello GoLang:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/154"
>
https://blog.yexca.net/ja/archives/154
&lt;/a>
&lt;br>
GoLang (var and const) 変数と定数:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/155"
>
https://blog.yexca.net/ja/archives/155
&lt;/a>
&lt;br>
GoLang (func) 関数:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/156"
>
https://blog.yexca.net/ja/archives/156
&lt;/a>
&lt;br>
GoLang (slice and map) スライス:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/160"
>
https://blog.yexca.net/ja/archives/160
&lt;/a>
&lt;br>
GoLang (OOP) オブジェクト指向:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/162"
>
https://blog.yexca.net/ja/archives/162
&lt;/a>
&lt;br>
GoLang (reflect) リフレクション:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/204"
>
https://blog.yexca.net/ja/archives/204
&lt;/a>
&lt;br>
GoLang (struct tag) 構造タグ: この記事&lt;br>
GoLang (goroutine) ゴルーチン:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/206"
>
https://blog.yexca.net/ja/archives/206
&lt;/a>
&lt;br>
GoLang (channel) チャンネル:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/207"
>
https://blog.yexca.net/ja/archives/207
&lt;/a>
&lt;/p></description></item><item><title>GoLang リフレクション</title><link>https://blog.yexca.net/ja/archives/204/</link><pubDate>Tue, 03 Dec 2024 14:07:18 +0800</pubDate><guid>https://blog.yexca.net/ja/archives/204/</guid><description>&lt;blockquote>
&lt;p>この記事の一部は機械翻訳を使ったよ&lt;/p>
&lt;p>&lt;strong>Golang シリーズ&lt;/strong>&lt;/p>
&lt;p>Hello GoLang:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/154"
>
https://blog.yexca.net/ja/archives/154
&lt;/a>
&lt;br>
GoLang (var and const) 変数と定数:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/155"
>
https://blog.yexca.net/ja/archives/155
&lt;/a>
&lt;br>
GoLang (func) 関数:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/156"
>
https://blog.yexca.net/ja/archives/156
&lt;/a>
&lt;br>
GoLang (slice and map) スライス:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/160"
>
https://blog.yexca.net/ja/archives/160
&lt;/a>
&lt;br>
GoLang (OOP) オブジェクト指向:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/162"
>
https://blog.yexca.net/ja/archives/162
&lt;/a>
&lt;br>
GoLang (reflect) リフレクション: この記事&lt;br>
GoLang (struct tag) 構造タグ:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/205"
>
https://blog.yexca.net/ja/archives/205
&lt;/a>
&lt;br>
GoLang (goroutine) ゴルーチン:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/206"
>
https://blog.yexca.net/ja/archives/206
&lt;/a>
&lt;br>
GoLang (channel) チャンネル:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/207"
>
https://blog.yexca.net/ja/archives/207
&lt;/a>
&lt;/p></description></item><item><title>n-クイーン問題のアルゴリズム（バックトラッキング）</title><link>https://blog.yexca.net/ja/archives/176/</link><pubDate>Sun, 28 Jul 2024 14:26:26 +0800</pubDate><guid>https://blog.yexca.net/ja/archives/176/</guid><description>&lt;blockquote>
&lt;p>この記事は Google 翻訳を使用して処理されました&lt;/p>
&lt;/blockquote>
&lt;h2 id="問題の説明">問題の説明
&lt;/h2>&lt;p>n クイーン問題は、n 行 n 列のチェス盤に n 個のクイーンを配置し、クイーン同士が攻撃できないようにすることです。ルールは、2 個のクイーンが同じ行、列、または対角線上にないことです（つまり、 、チェスのクイーンの移動範囲）&lt;/p></description></item><item><title>Nacos 登録センター</title><link>https://blog.yexca.net/ja/archives/169/</link><pubDate>Thu, 02 May 2024 22:36:17 +0800</pubDate><guid>https://blog.yexca.net/ja/archives/169/</guid><description>&lt;p>まずソフトウェアをインストールする必要があります。公式ウェブサイト (英語):
&lt;a class="link" href="https://nacos.io/en/"
target="_blank" rel="noopener"
>
https://nacos.io/en/
&lt;/a>
&lt;/p>
&lt;p>ポートは &lt;code>conf/application.properties&lt;/code> ファイルで変更できます。デフォルトは 8848 です。&lt;/p>
&lt;h2 id="サービスに登録する">サービスに登録する
&lt;/h2>&lt;p>親プロジェクトに管理依存関係を追加する&lt;/p></description></item><item><title>Ribbon 負荷分散</title><link>https://blog.yexca.net/ja/archives/168/</link><pubDate>Sun, 28 Apr 2024 15:50:15 +0800</pubDate><guid>https://blog.yexca.net/ja/archives/168/</guid><description>&lt;p>コンシューマによって開始されたリクエストはリボンによってインターセプトされ、リボンはユーレカからプロバイダリストを取得し、ユーレカはプロバイダリストを返し、リボンはIRuleに基づいてリクエストを開始するサーバを選択します。&lt;/p></description></item><item><title>GoLang オブジェクト指向</title><link>https://blog.yexca.net/ja/archives/162/</link><pubDate>Fri, 01 Mar 2024 15:35:38 +0800</pubDate><guid>https://blog.yexca.net/ja/archives/162/</guid><description>&lt;blockquote>
&lt;p>この記事の一部は機械翻訳を使ったよ&lt;/p>
&lt;p>&lt;strong>Golang シリーズ&lt;/strong>&lt;/p>
&lt;p>Hello GoLang:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/154"
>
https://blog.yexca.net/ja/archives/154
&lt;/a>
&lt;br>
GoLang (var and const) 変数と定数:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/155"
>
https://blog.yexca.net/ja/archives/155
&lt;/a>
&lt;br>
GoLang (func) 関数:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/156"
>
https://blog.yexca.net/ja/archives/156
&lt;/a>
&lt;br>
GoLang (slice and map) スライス:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/160"
>
https://blog.yexca.net/ja/archives/160
&lt;/a>
&lt;br>
GoLang (OOP) オブジェクト指向: この記事&lt;br>
GoLang (reflect) リフレクション:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/204"
>
https://blog.yexca.net/ja/archives/204
&lt;/a>
&lt;br>
GoLang (struct tag) 構造タグ:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/205"
>
https://blog.yexca.net/ja/archives/205
&lt;/a>
&lt;br>
GoLang (goroutine) ゴルーチン:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/206"
>
https://blog.yexca.net/ja/archives/206
&lt;/a>
&lt;br>
GoLang (channel) チャンネル:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/207"
>
https://blog.yexca.net/ja/archives/207
&lt;/a>
&lt;/p></description></item><item><title>登録センター - Eureka</title><link>https://blog.yexca.net/ja/archives/161/</link><pubDate>Thu, 29 Feb 2024 16:53:15 +0800</pubDate><guid>https://blog.yexca.net/ja/archives/161/</guid><description>&lt;p>レジストリを導入する前に、プロバイダーとコンシューマーの概念を紹介します。&lt;/p>
&lt;h2 id="プロバイダーとコンシューマー">プロバイダーとコンシューマー
&lt;/h2>&lt;p>サービス プロバイダー: ビジネス内の他のマイクロサービスによって呼び出されるサービス。 (他のマイクロサービスへのインターフェースを提供する)&lt;/p></description></item><item><title>GoLang スライス</title><link>https://blog.yexca.net/ja/archives/160/</link><pubDate>Tue, 27 Feb 2024 20:00:00 +0800</pubDate><guid>https://blog.yexca.net/ja/archives/160/</guid><description>&lt;blockquote>
&lt;p>この記事の一部は機械翻訳を使ったよ&lt;/p>
&lt;p>&lt;strong>Golang シリーズ&lt;/strong>&lt;/p>
&lt;p>Hello GoLang:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/154"
>
https://blog.yexca.net/ja/archives/154
&lt;/a>
&lt;br>
GoLang (var and const) 変数と定数:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/155"
>
https://blog.yexca.net/ja/archives/155
&lt;/a>
&lt;br>
GoLang (func) 関数:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/156"
>
https://blog.yexca.net/ja/archives/156
&lt;/a>
&lt;br>
GoLang (slice and map) スライス: この記事&lt;br>
GoLang (OOP) オブジェクト指向:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/162"
>
https://blog.yexca.net/ja/archives/162
&lt;/a>
&lt;br>
GoLang (reflect) リフレクション:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/204"
>
https://blog.yexca.net/ja/archives/204
&lt;/a>
&lt;br>
GoLang (struct tag) 構造タグ:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/205"
>
https://blog.yexca.net/ja/archives/205
&lt;/a>
&lt;br>
GoLang (goroutine) ゴルーチン:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/206"
>
https://blog.yexca.net/ja/archives/206
&lt;/a>
&lt;br>
GoLang (channel) チャンネル:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/207"
>
https://blog.yexca.net/ja/archives/207
&lt;/a>
&lt;/p></description></item><item><title>Hi SpringCloud</title><link>https://blog.yexca.net/ja/archives/158/</link><pubDate>Sun, 25 Feb 2024 17:56:54 +0800</pubDate><guid>https://blog.yexca.net/ja/archives/158/</guid><description>&lt;h2 id="サービスアーキテクチャ">サービスアーキテクチャ
&lt;/h2>&lt;h3 id="モノリシックアーキテクチャ">モノリシックアーキテクチャ
&lt;/h3>&lt;p>すべてのビジネス機能を1つのプロジェクトで開発し、展開用に1つのパッケージにパッケージ化します。&lt;/p>
&lt;p>利点: シンプルなアーキテクチャ、スケーラビリティが低い、導入コストが低い、小規模プロジェクトに適している&lt;/p></description></item><item><title>GoLang 関数</title><link>https://blog.yexca.net/ja/archives/156/</link><pubDate>Thu, 22 Feb 2024 04:47:28 +0800</pubDate><guid>https://blog.yexca.net/ja/archives/156/</guid><description>&lt;blockquote>
&lt;p>この記事の一部は機械翻訳を使ったよ&lt;/p>
&lt;p>&lt;strong>Golang シリーズ&lt;/strong>&lt;/p>
&lt;p>Hello GoLang:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/154"
>
https://blog.yexca.net/ja/archives/154
&lt;/a>
&lt;br>
GoLang (var and const) 変数と定数:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/155"
>
https://blog.yexca.net/ja/archives/155
&lt;/a>
&lt;br>
GoLang (func) 関数: この記事&lt;br>
GoLang (slice and map) スライス:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/160"
>
https://blog.yexca.net/ja/archives/160
&lt;/a>
&lt;br>
GoLang (OOP) オブジェクト指向:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/162"
>
https://blog.yexca.net/ja/archives/162
&lt;/a>
&lt;br>
GoLang (reflect) リフレクション:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/204"
>
https://blog.yexca.net/ja/archives/204
&lt;/a>
&lt;br>
GoLang (struct tag) 構造タグ:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/205"
>
https://blog.yexca.net/ja/archives/205
&lt;/a>
&lt;br>
GoLang (goroutine) ゴルーチン:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/206"
>
https://blog.yexca.net/ja/archives/206
&lt;/a>
&lt;br>
GoLang (channel) チャンネル:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/207"
>
https://blog.yexca.net/ja/archives/207
&lt;/a>
&lt;/p></description></item><item><title>GoLang 変数と定数</title><link>https://blog.yexca.net/ja/archives/155/</link><pubDate>Tue, 20 Feb 2024 06:41:18 +0800</pubDate><guid>https://blog.yexca.net/ja/archives/155/</guid><description>&lt;blockquote>
&lt;p>この記事の一部は機械翻訳を使ったよ&lt;/p>
&lt;p>&lt;strong>Golang シリーズ&lt;/strong>&lt;/p>
&lt;p>Hello GoLang:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/154"
>
https://blog.yexca.net/ja/archives/154
&lt;/a>
&lt;br>
GoLang (var and const) 変数と定数: この記事&lt;br>
GoLang (func) 関数:
&lt;a class="link" href="https://blog.yexca.net/archives/ja/156"
>
https://blog.yexca.net/archives/ja/156
&lt;/a>
&lt;br>
GoLang (slice and map) スライス:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/160"
>
https://blog.yexca.net/ja/archives/160
&lt;/a>
&lt;br>
GoLang (OOP) オブジェクト指向:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/162"
>
https://blog.yexca.net/ja/archives/162
&lt;/a>
&lt;br>
GoLang (reflect) リフレクション:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/204"
>
https://blog.yexca.net/ja/archives/204
&lt;/a>
&lt;br>
GoLang (struct tag) 構造タグ:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/205"
>
https://blog.yexca.net/ja/archives/205
&lt;/a>
&lt;br>
GoLang (goroutine) ゴルーチン:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/206"
>
https://blog.yexca.net/ja/archives/206
&lt;/a>
&lt;br>
GoLang (channel) チャンネル:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/207"
>
https://blog.yexca.net/ja/archives/207
&lt;/a>
&lt;/p></description></item><item><title>Hello GoLang</title><link>https://blog.yexca.net/ja/archives/154/</link><pubDate>Mon, 19 Feb 2024 07:58:37 +0800</pubDate><guid>https://blog.yexca.net/ja/archives/154/</guid><description>&lt;blockquote>
&lt;p>この記事の一部は機械翻訳を使ったよ&lt;/p>
&lt;p>&lt;strong>Golang シリーズ&lt;/strong>&lt;/p>
&lt;p>Hello GoLang: この記事&lt;br>
GoLang (var and const) 変数と定数:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/155"
>
https://blog.yexca.net/ja/archives/155
&lt;/a>
&lt;br>
GoLang (func) 関数:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/156"
>
https://blog.yexca.net/ja/archives/156
&lt;/a>
&lt;br>
GoLang (slice and map) スライス:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/160"
>
https://blog.yexca.net/ja/archives/160
&lt;/a>
&lt;br>
GoLang (OOP) オブジェクト指向:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/162"
>
https://blog.yexca.net/ja/archives/162
&lt;/a>
&lt;br>
GoLang (reflect) リフレクション:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/204"
>
https://blog.yexca.net/ja/archives/204
&lt;/a>
&lt;br>
GoLang (struct tag) 構造タグ:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/205"
>
https://blog.yexca.net/ja/archives/205
&lt;/a>
&lt;br>
GoLang (goroutine) ゴルーチン:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/206"
>
https://blog.yexca.net/ja/archives/206
&lt;/a>
&lt;br>
GoLang (channel) チャンネル:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/207"
>
https://blog.yexca.net/ja/archives/207
&lt;/a>
&lt;/p></description></item><item><title>JavaWeb 入門</title><link>https://blog.yexca.net/ja/archives/142/</link><pubDate>Wed, 10 Jan 2024 17:53:18 +0800</pubDate><guid>https://blog.yexca.net/ja/archives/142/</guid><description>&lt;h2 id="springboot-入門の例">SpringBoot 入門の例
&lt;/h2>&lt;p>要件：SpringBoot 开发一个 Web 应用，浏览器発行起 /hello 後，返字文字列 “Hello Spring” を使用します。&lt;/p>
&lt;p>最初に必要な SpringBoot 工程、段階选 web 开公開相关依赖&lt;/p></description></item><item><title>アルゴリズム 鉄筋切断問題 (動的計画法 分割統治法)</title><link>https://blog.yexca.net/ja/archives/110/</link><pubDate>Sat, 27 May 2023 19:37:08 +0800</pubDate><guid>https://blog.yexca.net/ja/archives/110/</guid><description>&lt;blockquote>
&lt;p>この記事は Google 翻訳を使用して処理されました&lt;/p>
&lt;/blockquote>
&lt;h2 id="問題の説明">問題の説明
&lt;/h2>&lt;p>ある会社が長い鉄棒を購入し、それを切断して販売します。鉄筋を切断するコストはごくわずかで、鉄筋の長さはインチです。価格表 $p$ が与えられます。ここで、 $p_{i}(i=1,2,\cdots,m)$ は長さ $i$ インチの鉄棒の価格を表します。今、売上収益を最大化するカット計画を見つける必要があります。&lt;/p></description></item><item><title>アルゴリズム偽造コイン問題 (分割統治)</title><link>https://blog.yexca.net/ja/archives/109/</link><pubDate>Thu, 18 May 2023 20:17:35 +0800</pubDate><guid>https://blog.yexca.net/ja/archives/109/</guid><description>&lt;blockquote>
&lt;p>この記事は Google 翻訳を使用して処理されました&lt;/p>
&lt;/blockquote>
&lt;h2 id="問題の説明">問題の説明
&lt;/h2>&lt;p>コインは $n$ 枚あり、そのうち 1 枚は偽造コインであり、偽造コインの方が軽いことが分かっています。今では残高は 1 つだけなので、できるだけ少ない比較で偽造コインを見つける必要があります。&lt;/p></description></item><item><title>アルゴリズム回路配線問題（動的計画法）</title><link>https://blog.yexca.net/ja/archives/106/</link><pubDate>Tue, 16 May 2023 17:53:31 +0800</pubDate><guid>https://blog.yexca.net/ja/archives/106/</guid><description>&lt;blockquote>
&lt;p>この記事は Google 翻訳を使用して処理されました&lt;/p>
&lt;/blockquote>
&lt;h2 id="問題の説明">問題の説明
&lt;/h2>&lt;p>回路基板の上端と下端には n 個の端子があります。回路設計によれば、$(i, \pi(i))$ は、上側の端子 i と下側の端子 $\pi(i)$ の間の接続を表すために使用され、これは回路図上の i 番目の接続と呼ばれます。&lt;/p></description></item><item><title>Git 学習メモ</title><link>https://blog.yexca.net/ja/archives/95/</link><pubDate>Sun, 05 Mar 2023 15:03:43 +0800</pubDate><guid>https://blog.yexca.net/ja/archives/95/</guid><description>&lt;div class="notice ">&lt;strong>📢&lt;/strong> この記事は ChatGPT によって翻訳されました
&lt;/div>
&lt;style lang="scss">
.notice {
padding: 0.75em 1em;
margin: 1em 0;
border-left: 4px solid;
border-radius: 4px;
&amp;.default {
border-color: #ccc;
background-color: #f9f9f9;
color: #333;
}
&amp;.info {
border-color: #2196f3;
background-color: #e3f2fd;
color: #1a237e;
}
&amp;.warn {
border-color: #ff9800;
background-color: #fff3e0;
color: #e65100;
}
&amp;.danger {
border-color: #f44336;
background-color: #ffebee;
color: #b71c1c;
}
}
[data-scheme="dark"] {
.notice {
&amp;.default {
border-color: #666;
background-color: #2a2a2a;
color: #eee;
}
&amp;.info {
border-color: #90caf9;
background-color: #1e3a5f;
color: #e3f2fd;
}
&amp;.warn {
border-color: #ffb74d;
background-color: #4e342e;
color: #fff3e0;
}
&amp;.danger {
border-color: #ef5350;
background-color: #3e2723;
color: #ffebee;
}
}
}
[data-scheme="sepia"] {
.notice {
&amp;.info {
border-color: #6a5acd;
background-color: #fdf6e3;
color: #3c2f2f;
}
&amp;.warn {
border-color: #e9967a;
background-color: #faf0e6;
color: #5c4033;
}
&amp;.danger {
border-color: #cd5c5c;
background-color: #f5e0dc;
color: #7b3f3f;
}
}
}
&lt;/style>
&lt;p>自分が学んだ Git の内容をまとめておくよ。&lt;/p></description></item><item><title>データベースの学習 3 SQL言語</title><link>https://blog.yexca.net/ja/archives/88/</link><pubDate>Wed, 08 Feb 2023 08:00:00 +0800</pubDate><guid>https://blog.yexca.net/ja/archives/88/</guid><description>&lt;blockquote>
&lt;p>この記事は Google 翻訳を使用して処理されました&lt;/p>
&lt;p>&lt;strong>SQL Series&lt;/strong>&lt;/p>
&lt;p>データベース学習 1 データベース入門:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/86"
>
https://blog.yexca.net/ja/archives/86
&lt;/a>
&lt;br>
データベース学習 2 リレーショナル モデル:
&lt;a class="link" href="https://blog.yexca.net/archives/ja/87"
>
https://blog.yexca.net/archives/ja/87
&lt;/a>
&lt;br>
データベースの学習 3 SQL言語: 本文&lt;/p></description></item><item><title>データベース学習 2 リレーショナル モデル</title><link>https://blog.yexca.net/ja/archives/87/</link><pubDate>Tue, 07 Feb 2023 06:00:00 +0800</pubDate><guid>https://blog.yexca.net/ja/archives/87/</guid><description>&lt;blockquote>
&lt;p>この記事は Google 翻訳を使用して処理されました&lt;/p>
&lt;p>&lt;strong>SQL Series&lt;/strong>&lt;/p>
&lt;p>データベース学習 1 データベース入門:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/86"
>
https://blog.yexca.net/ja/archives/86
&lt;/a>
&lt;br>
データベース学習 2 リレーショナル モデル: 本文&lt;br>
データベースの学習 3 SQL言語:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/88"
>
https://blog.yexca.net/ja/archives/88
&lt;/a>
&lt;/p></description></item><item><title>データベース学習 1 データベース入門</title><link>https://blog.yexca.net/ja/archives/86/</link><pubDate>Mon, 06 Feb 2023 19:57:35 +0800</pubDate><guid>https://blog.yexca.net/ja/archives/86/</guid><description>&lt;blockquote>
&lt;p>この記事は Google 翻訳を使用して処理されました&lt;/p>
&lt;p>&lt;strong>SQL Series&lt;/strong>&lt;/p>
&lt;p>データベース学習 1 データベース入門: 本文&lt;br>
データベース学習 2 リレーショナル モデル:
&lt;a class="link" href="https://blog.yexca.net/archives/ja/87"
>
https://blog.yexca.net/archives/ja/87
&lt;/a>
&lt;br>
データベースの学習 3 SQL言語:
&lt;a class="link" href="https://blog.yexca.net/ja/archives/88"
>
https://blog.yexca.net/ja/archives/88
&lt;/a>
&lt;/p></description></item><item><title>HTTP 学習メモ</title><link>https://blog.yexca.net/ja/archives/64/</link><pubDate>Mon, 05 Sep 2022 16:03:36 +0800</pubDate><guid>https://blog.yexca.net/ja/archives/64/</guid><description>&lt;div class="notice ">&lt;strong>📢&lt;/strong> この記事は ChatGPT によって翻訳されました
&lt;/div>
&lt;style lang="scss">
.notice {
padding: 0.75em 1em;
margin: 1em 0;
border-left: 4px solid;
border-radius: 4px;
&amp;.default {
border-color: #ccc;
background-color: #f9f9f9;
color: #333;
}
&amp;.info {
border-color: #2196f3;
background-color: #e3f2fd;
color: #1a237e;
}
&amp;.warn {
border-color: #ff9800;
background-color: #fff3e0;
color: #e65100;
}
&amp;.danger {
border-color: #f44336;
background-color: #ffebee;
color: #b71c1c;
}
}
[data-scheme="dark"] {
.notice {
&amp;.default {
border-color: #666;
background-color: #2a2a2a;
color: #eee;
}
&amp;.info {
border-color: #90caf9;
background-color: #1e3a5f;
color: #e3f2fd;
}
&amp;.warn {
border-color: #ffb74d;
background-color: #4e342e;
color: #fff3e0;
}
&amp;.danger {
border-color: #ef5350;
background-color: #3e2723;
color: #ffebee;
}
}
}
[data-scheme="sepia"] {
.notice {
&amp;.info {
border-color: #6a5acd;
background-color: #fdf6e3;
color: #3c2f2f;
}
&amp;.warn {
border-color: #e9967a;
background-color: #faf0e6;
color: #5c4033;
}
&amp;.danger {
border-color: #cd5c5c;
background-color: #f5e0dc;
color: #7b3f3f;
}
}
}
&lt;/style>
&lt;h2 id="はじめに">はじめに
&lt;/h2>&lt;p>これは肖佳先生の書籍『HTTP抓包实战』を読んだ後にまとめた HTTP に関する学習メモです。主に HTTP メッセージ関連の内容を整理しました。（記録：読書＋本記事作成に5日間かかりました）&lt;/p></description></item><item><title>Markdown 概要（学習ノート）</title><link>https://blog.yexca.net/ja/archives/43/</link><pubDate>Sat, 28 May 2022 00:59:23 +0800</pubDate><guid>https://blog.yexca.net/ja/archives/43/</guid><description>&lt;div class="notice ">&lt;strong>📢&lt;/strong> この記事は ChatGPT によって翻訳されました
&lt;/div>
&lt;style lang="scss">
.notice {
padding: 0.75em 1em;
margin: 1em 0;
border-left: 4px solid;
border-radius: 4px;
&amp;.default {
border-color: #ccc;
background-color: #f9f9f9;
color: #333;
}
&amp;.info {
border-color: #2196f3;
background-color: #e3f2fd;
color: #1a237e;
}
&amp;.warn {
border-color: #ff9800;
background-color: #fff3e0;
color: #e65100;
}
&amp;.danger {
border-color: #f44336;
background-color: #ffebee;
color: #b71c1c;
}
}
[data-scheme="dark"] {
.notice {
&amp;.default {
border-color: #666;
background-color: #2a2a2a;
color: #eee;
}
&amp;.info {
border-color: #90caf9;
background-color: #1e3a5f;
color: #e3f2fd;
}
&amp;.warn {
border-color: #ffb74d;
background-color: #4e342e;
color: #fff3e0;
}
&amp;.danger {
border-color: #ef5350;
background-color: #3e2723;
color: #ffebee;
}
}
}
[data-scheme="sepia"] {
.notice {
&amp;.info {
border-color: #6a5acd;
background-color: #fdf6e3;
color: #3c2f2f;
}
&amp;.warn {
border-color: #e9967a;
background-color: #faf0e6;
color: #5c4033;
}
&amp;.danger {
border-color: #cd5c5c;
background-color: #f5e0dc;
color: #7b3f3f;
}
}
}
&lt;/style>
&lt;h2 id="はじめに">はじめに
&lt;/h2>&lt;p>最近、
&lt;a class="link" href="https://pan.vrchat.yexca.xyz/"
target="_blank" rel="noopener"
>
クラウドサイト
&lt;/a>
を作る過程で Markdown に触れましたが、非常に使いやすいことに気付き、学習ノートとしてまとめることにしました。&lt;/p></description></item></channel></rss>